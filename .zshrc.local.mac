#
# kuozumijp .zshrc.local for mac
#

export GOROOT=/usr/lib/golang
export GOPATH=$HOME/.go
export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
export BREW_PREFIX=$(brew --prefix)
export PATH=$HOME/.nodebrew/current/bin:$PATH:$BREW_PREFIX/share/git-core/contrib/diff-highlight:$HOME/bin/sqlplus/instantclient_12_1:$HOME/.rbenv/bin
export PATH=$BREW_PREFIX/opt/gnu-sed/libexec/gnubin:$BREW_PREFIX/opt/grep/libexec/gnubin:$BREW_PREFIX/opt/mysql-client/bin:$PATH
export MANPATH=$BREW_PREFIX/opt/gnu-sed/libexec/gnuman:$BREW_PREFIX/opt/grep/libexec/gnuman:$MANPATH
export STUDIO_JDK=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk
export ANDROID_HOME=/usr/local/share/android-sdk
#export DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375
export LDFLAGS="-L${BREW_PREFIX}/opt/sqlcipher/lib"
export CPPFLAGS="-I${BREW_PREFIX}/opt/sqlcipher/include"
export PKG_CONFIG_PATH="${BREW_PREFIX}/opt/sqlite/lib/pkgconfig"
export VIMRUNTIME="/usr/local/share/vim/vim*"

# zplug install (Only environment)
zplug "peco/peco", from:gh-r, as:command, use:"*darwin*amd64*"
zplug "junegunn/fzf-bin", from:gh-r, as:command, rename-to:fzf, use:"*darwin*amd64*"
zplug "tsub/81ac9b881cf2475977c9cb619021ef3c", from:gist # ssh-fzf.zsh
zplug "tsub/f4036e067a59b242a161fc3c8a5f01dd", from:gist # history-fzf.zsh

zplug-stdin

# aliaes
compdef mosh=ssh

alias vi="TERM=xterm-color /usr/local/bin/vim"
alias vim="TERM=xterm-color /usr/local/bin/vim"
alias grep="${BREW_PREFIX}/bin/ggrep"
alias ls="${BREW_PREFIX}/bin/gls -F --color=auto"
alias ll="${BREW_PREFIX}/bin/gls -laF --color=auto"
alias la="${BREW_PREFIX}/bin/gls -FCa --color=auto"
alias lt="${BREW_PREFIX}/bin/gls -lt --color=auto"
alias readlink="greadlink"

if which gdircolors > /dev/null 2>&1 ; then
  if [[ -f ${HOME}/.dircolors ]]; then
    eval $(gdircolors -b ${HOME}/.dircolors)
  else
    eval `gdircolors`
  fi
fi

if [ -e $HOME/.zsh/completions ]; then
  fpath=($HOME/.zsh/completions $fpath)
fi

# hub
COMMAND_HUB=`which hub`
if [ "$?" -eq "0" ]; then
  alias git="hub"
  function git() {
    $COMMAND_HUB "$@"
  }
fi

# Oracle
COMMAND_SQLPLUS=`which sqlplus`
if [ "$?" -eq "0" ]; then
  export ORACLE_HOME=`echo $(readlink -f $COMMAND_SQLPLUS) | sed 's/\/sqlplus$//g'`
  if [ -n "$DYLD_LIBRARY_PATH" ]; then
    export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$ORACLE_HOME
  else
    export DYLD_LIBRARY_PATH=$ORACLE_HOME
  fi
  export TNS_ADMIN="$ORACLE_HOME/network/admin"
  export OCI_LIB_DIR=$ORACLE_HOME
  export OCI_INC_DIR="$ORACLE_HOME/sdk/include"
  export NLS_LANG="Japanese_Japan.AL32UTF8"
  export SQLPATH=$HOME

  # rlwrap
  COMMAND_RLWRAP=`which rlwrap`
  if [ "$?" -eq "0" ]; then
    alias oracle="$COMMAND_RLWRAP -pGreen -if $HOME/.rlwrap/sqlplus $COMMAND_SQLPLUS /nolog"
  else
    alias oracle="$COMMAND_SQLPLUS /nolog"
  fi
fi

# tmuxのステータスバーにHostを表示する
function ssh() {
  if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
    tmux rename-window ${@: -1}
    command ssh "$@"
    tmux set-window-option automatic-rename "on" 1>/dev/null
  else
    command ssh $@
  fi
}

function mosh() {
  if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
    tmux rename-window ${1}
    command mosh "$@"
    tmux set-window-option automatic-rename "on" 1>/dev/null
  else
    command mosh $@
  fi
}

# peco
function peco-history-selection() {
    BUFFER=`history -n 1 | /usr/bin/tail -r  | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

#zle -N peco-history-selection
#bindkey '^R' peco-history-selection

# rbenv
eval export PATH="${HOME}/.rbenv/shims:${PATH}"
export RBENV_SHELL=zsh
RBENV_VERSION=`cat ${BREW_PREFIX}/Cellar/rbenv/*/INSTALL_RECEIPT.json | jq -r .source.versions.stable`
source "${BREW_PREFIX}/Cellar/rbenv/${RBENV_VERSION}/libexec/../completions/rbenv.zsh"
command rbenv rehash 2>/dev/null
rbenv() {
  local command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "$(rbenv "sh-$command" "$@")";;
  *)
    command rbenv "$command" "$@";;
  esac
}
